predicate alldifferent(array [int] of var int: x);
array [1..16] of float: X_INTRODUCED_9 = [0.0,2.23606797749979,2.23606797749979,3.605551275463989,2.23606797749979,0.0,1.414213562373095,1.414213562373095,2.23606797749979,1.414213562373095,0.0,2.0,3.605551275463989,1.414213562373095,2.0,0.0];
array [1..16] of float: X_INTRODUCED_14 = [0.0,2.23606797749979,2.23606797749979,3.605551275463989,2.23606797749979,0.0,1.414213562373095,1.414213562373095,2.23606797749979,1.414213562373095,0.0,2.0,3.605551275463989,1.414213562373095,2.0,0.0];
array [1..16] of float: X_INTRODUCED_19 = [0.0,2.23606797749979,2.23606797749979,3.605551275463989,2.23606797749979,0.0,1.414213562373095,1.414213562373095,2.23606797749979,1.414213562373095,0.0,2.0,3.605551275463989,1.414213562373095,2.0,0.0];
var 1..4: X_INTRODUCED_0;
var 1..4: X_INTRODUCED_1;
var 1..4: X_INTRODUCED_2;
var 1..4: X_INTRODUCED_3;
var 1..16: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 0.0..3.605551275463989: X_INTRODUCED_8 ::var_is_introduced :: is_defined_var;
var 1..16: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 0.0..3.605551275463989: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 1..16: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 0.0..3.605551275463989: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: visit:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
constraint array_float_element(X_INTRODUCED_7,X_INTRODUCED_9,X_INTRODUCED_8):: defines_var(X_INTRODUCED_8);
constraint array_float_element(X_INTRODUCED_12,X_INTRODUCED_14,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint array_float_element(X_INTRODUCED_17,X_INTRODUCED_19,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint alldifferent(visit);
constraint int_lin_eq([1,4,-1],[X_INTRODUCED_1,X_INTRODUCED_0,X_INTRODUCED_7],4):: domain:: defines_var(X_INTRODUCED_7);
constraint int_lin_eq([1,4,-1],[X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_12],4):: domain:: defines_var(X_INTRODUCED_12);
constraint int_lin_eq([1,4,-1],[X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_17],4):: domain:: defines_var(X_INTRODUCED_17);
solve  satisfy;
