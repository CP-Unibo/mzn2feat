array [1..2] of int: X_INTRODUCED_6 = [1,-1];
var 0..14: X_INTRODUCED_0;
var 0..14: X_INTRODUCED_1;
var 0..14: X_INTRODUCED_2;
var 0..14: X_INTRODUCED_3;
var 0..14: end;
var bool: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_9 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
array [1..4] of var int: s:: output_array([1..2,1..2]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
constraint array_bool_or([X_INTRODUCED_7,X_INTRODUCED_9],true);
constraint int_lin_le(X_INTRODUCED_6,[X_INTRODUCED_1,end],-5);
constraint int_lin_le(X_INTRODUCED_6,[X_INTRODUCED_0,X_INTRODUCED_1],-2);
constraint array_bool_or([X_INTRODUCED_12,X_INTRODUCED_13],true);
constraint int_lin_le(X_INTRODUCED_6,[X_INTRODUCED_3,end],-4);
constraint int_lin_le(X_INTRODUCED_6,[X_INTRODUCED_2,X_INTRODUCED_3],-3);
constraint int_lin_le_reif(X_INTRODUCED_6,[X_INTRODUCED_2,X_INTRODUCED_0],-3,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint int_lin_le_reif(X_INTRODUCED_6,[X_INTRODUCED_0,X_INTRODUCED_2],-2,X_INTRODUCED_9):: defines_var(X_INTRODUCED_9);
constraint int_lin_le_reif(X_INTRODUCED_6,[X_INTRODUCED_3,X_INTRODUCED_1],-4,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint int_lin_le_reif(X_INTRODUCED_6,[X_INTRODUCED_1,X_INTRODUCED_3],-5,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
solve  minimize end;
