array [1..3] of float: X_INTRODUCED_19 = [0.5,0.4,0.3];
array [1..3] of float: X_INTRODUCED_25 = [0.2,0.4,0.6];
array [1..2] of float: X_INTRODUCED_28 = [-1.0,-1.0];
var float: X_INTRODUCED_0;
var float: X_INTRODUCED_1;
var float: X_INTRODUCED_2;
var float: X_INTRODUCED_3;
var float: X_INTRODUCED_4;
var float: X_INTRODUCED_5;
var float: cost:: is_defined_var;
array [1..3] of var float: inside:: output_array([1..3]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2];
array [1..3] of var float: outside:: output_array([1..3]) = [X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5];
constraint float_le(0.0,X_INTRODUCED_3);
constraint float_le(0.0,X_INTRODUCED_0);
constraint float_le(0.0,X_INTRODUCED_4);
constraint float_le(0.0,X_INTRODUCED_1);
constraint float_le(0.0,X_INTRODUCED_5);
constraint float_le(0.0,X_INTRODUCED_2);
constraint float_lin_le(X_INTRODUCED_19,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2],20.0);
constraint float_lin_le(X_INTRODUCED_25,[X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2],40.0);
constraint float_lin_le(X_INTRODUCED_28,[X_INTRODUCED_0,X_INTRODUCED_3],-100.0);
constraint float_lin_le(X_INTRODUCED_28,[X_INTRODUCED_1,X_INTRODUCED_4],-200.0);
constraint float_lin_le(X_INTRODUCED_28,[X_INTRODUCED_2,X_INTRODUCED_5],-300.0);
constraint float_lin_eq([0.6,0.8,0.8,0.9,0.3,0.4,-1.0],[X_INTRODUCED_0,X_INTRODUCED_3,X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_2,X_INTRODUCED_5,cost],0.0):: defines_var(cost);
solve  minimize cost;
