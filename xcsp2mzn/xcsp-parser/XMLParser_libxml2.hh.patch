--- xcsp-parser/XMLParser_libxml2.hh	2011-03-23 17:22:27.650349217 +0100
+++ xcsp-parser-orig/XMLParser_libxml2.hh	2008-06-02 18:53:44.000000000 +0200
@@ -426,12 +426,7 @@
 	v+=*p;
     }
 
-    friend ostream &operator <<(ostream &f, const UTF8String s)
-    {
-      // directly output UTF8
-      f.write(reinterpret_cast<const char *>(s._beg),s.byteLength());
-      return f;
-    }
+    friend ostream &operator <<(ostream &f, const UTF8String s);
 
     class Tokenizer
     {
@@ -558,8 +553,15 @@
     int allocated; // size of allocated array (or 0 if don't own the memory) 
   };
 
+  ostream &operator <<(ostream &f, const UTF8String s)
+  {
+    // directly output UTF8
+    f.write(reinterpret_cast<const char *>(s._beg),s.byteLength());
+    return f;
+  }
+
   template<>
-  inline bool UTF8String::to<string>(string &v) const
+  bool UTF8String::to<string>(string &v) const
   {
     // fill v with the UTF8 encoding
     v.clear();
@@ -571,7 +573,7 @@
   }
 
   template<>
-  inline bool UTF8String::to<int>(int &v) const
+  bool UTF8String::to<int>(int &v) const
   {
     iterator it(_beg),end(_end);
     bool neg=false;
@@ -757,18 +759,8 @@
 
     int parse(const char *filename)
     {
-      int ret;
-
-      if ( ('-' == filename[0]) && (0 == filename[1]) )
-         ret = parse(cin);
-      else
-       {
-         ifstream in(filename);
-
-         ret = parse(in);
-       }
-
-      return(ret);
+      ifstream in(filename);
+      return parse(in);
     }
 
     void setPreferredExpressionRepresentation(Syntax syntax)
